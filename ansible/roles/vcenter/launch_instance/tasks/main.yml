---

- name: Create the VM
  fixed_vmware_guest:
    hostname: "{{ vcenter_host }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    esxi_hostname: "{{ vsphere_host }}"
    datacenter: "{{ vcenter_datacenter }}"
    state: "present"
    name: "{{ vm_name }}"
    guest_id: "{{ vm_guest_id|default('ubuntu64Guest') }}"
    disk: "{{ vm_disk }}"
    hardware:
      memory_mb: "{{ vm_memory_mb|default(512) }}"
      num_cpus: "{{ vm_num_cpus|default(1) }}"
      scsi: paravirtual
    networks: "{{ vm_networks }}"
    template: "{{ vm_template|default(omit) }}"
    wait_for_ip_address: yes
    customization:
      hostname: "{{ vm_name }}"
  register: vcenter

- name: Ensure the vm is powered on
  fixed_vmware_guest:
    hostname: "{{ vcenter_host }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: no
    esxi_hostname: "{{ vsphere_host }}"
    datacenter: "{{ vcenter_datacenter }}"
    state: "poweredon"
    name: "{{ vm_name }}"
  register: vcenter

- name: Set vm
  set_fact:
    instance: "{{ vcenter.instance }}"
  when: vcenter.instance is defined

- name: Find vm
  vmware_guest_facts:
    hostname: "{{ vcenter_host }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ vcenter_datacenter }}"
    validate_certs: no
    name: "{{Â vm_name }}"
  when: vcenter.instance is not defined
  register: vcenter_lookup_vm

- name: Set found vm
  set_fact:
    instance: "{{ vcenter_lookup_vm.instance }}"
  when: vcenter_lookup_vm.instance is defined

- name: Add instances host to inventory
  action: add_host hostname={{ instance.ipv4 }} groupname=instances
  when: instance is defined

- name: Wait for instances to become available
  wait_for:
    state=started
    host={{ instance.ipv4 }}
    port=22
  when: instance is defined and not vm_no_wait
